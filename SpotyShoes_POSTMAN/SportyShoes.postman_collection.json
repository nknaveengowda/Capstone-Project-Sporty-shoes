{
	"info": {
		"_postman_id": "cdb4813b-7191-4c3d-9eec-11e7f414876a",
		"name": "SportyShoes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32336112"
	},
	"item": [
		{
			"name": "List_of_Shoes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the 'code' field is equal to 0\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.code).to.equal(101);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the message field is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify 'shoes' array is present and contains at least one element\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.shoes).to.exist.and.to.be.an('array');\r",
							"    pm.expect(responseData.shoes.length).to.be.at.least(1, \"Array should contain at least one element\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9010/get-shoes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9010",
					"path": [
						"get-shoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Registered_Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - code, message, and users\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.code).to.exist;\r",
							"    pm.expect(responseData.message).to.exist;\r",
							"    pm.expect(responseData.users).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Name is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.users).to.be.an('array');\r",
							"    responseData.users.forEach(function (user) {\r",
							"        pm.expect(user.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Email is in a valid format\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.users).to.be.an('array').and.to.have.lengthOf.at.least(1);\r",
							"\r",
							"    responseData.users.forEach(function (user) {\r",
							"        pm.expect(user.email).to.exist.and.to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
							"    });\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9010/get-users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9010",
					"path": [
						"get-users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add_Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the 'code' field in the response\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.code).to.exist.and.to.be.a('number');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the 'message' field in the response\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.message).to.exist.and.to.be.a('string');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9010/add-shoe?id=101&image=image_url&name=SampleShoe&category=Running&sizes=9&price=1000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9010",
					"path": [
						"add-shoe"
					],
					"query": [
						{
							"key": "id",
							"value": "101"
						},
						{
							"key": "image",
							"value": "image_url"
						},
						{
							"key": "name",
							"value": "SampleShoe"
						},
						{
							"key": "category",
							"value": "Running"
						},
						{
							"key": "sizes",
							"value": "9"
						},
						{
							"key": "price",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete_Product",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:9010/delete-shoe?id=101",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9010",
					"path": [
						"delete-shoe"
					],
					"query": [
						{
							"key": "id",
							"value": "101"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update_Product",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n            \"id\": 101,\r\n            \"image\": \"2.png\",\r\n            \"name\": \"Elegant Leather Loafers\",\r\n            \"category\": \"Formal\",\r\n            \"sizes\": \"7, 8, 9\",\r\n            \"price\": 3000\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9010/update-shoe",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9010",
					"path": [
						"update-shoe"
					]
				}
			},
			"response": []
		}
	]
}